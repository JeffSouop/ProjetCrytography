from functools import reduce
from math import floor, gcd


def producttree(X):
    result = [X]
    while len(X) > 1:
        # Calcul des produits par paires successives
        X = [reduce(lambda x, y: x * y, X[i:i + 2]) for i in range(0, len(X), 2)]
        result.append(X)  # Ajout du produit actuel à la liste de résultats
    return result


def batchgcd_faster(X):
    prods = producttree(X)
    R = prods.pop()
    while prods:
        X = prods.pop()
        R = [R[floor(i / 2)] % X[i] ** 2 for i in range(len(X))]
    return [gcd(r // n, n) for r, n in zip(R, X)]

result = batchgcd_faster([742766292573789461138430713106656498577482106105452767343211753017973550878861638590047246174848574634573720584492944669558785810905825702100325794803983120697401526210439826606874730300903862093323398754125584892080731234772626570955922576399434033022944334623029747454371697865218999618129768679013891932765999545116374192173968985738129135224425889467654431372779943313524100225335793262665132039441111162352797240438393795570253671786791600672076401253164614309929080014895216439462173458352253266568535919120175826866378039177020829725517356783703110010084715777806343235841345264684364598708732655710904078855499605447884872767583987312177520332134164321746982952420498393591583416464199126272682424674947720461866762624768163777784559646117979893432692133818266724658906066075396922419161138847526583266030290937955148683298741803605463007526904924936746018546134099068479370078440023459839544052468222048449819089106832452146002755336956394669648596035188293917750838002531358091511944112847917218550963597247358780879029417872466325821996717925086546502702016501643824750668459565101211439428003662613442032518886622942136328590823063627643918273848803884791311375697313014431195473178892344923166262358299334827234064598421,
                          863162485280587290951461320194507631351219946980359135643717639675632094491308549643626118324266332536364152247841501489599461371705261817097019798731797696576381398530503414328022044518420353918069245125048525185342050006241421515852339220595973533806455693213985911389853362086298471441215062204048906016133918890033307811510562979930871310565950639753539503241944122536940861652785318520024298745039792040468378833645466342849959712133849603167881593752238268478121283710576532572156849998436711394170141605468547126947961235141945252147702044232597051802807700979969026137683057914907086476093848371975587305235972284100291434986521610482043693029155567453530750004699797496440481026808918758268309984015275094913286235884883604549312217160475693879249510435078670518055180372555908688634980112383546904633261115947840046685959021897925602809469115758350908718915615226945463969070382806734840463356379869677494186911403535722703656146884919978021980078902110776735819564589514437282865177061924243414037445397310710177326669816853673470529989604498473762977357316129637448063327252105235834299513702017283224179604467629851133419983217787541559610025950574483599467422368690702117525921770009005656388928433922862717303112140939,
                          18685329542079026707362375115260229640007696114402774975315523530912904967397187029180040030089276737810563728784991894640662060808055640569282390957022434272129537545053034188573620213736711169121817012137259902930567047639580907739326415648479641050688967103664527384484777454198540769385460800956119093351494698337449395239466284127272383343367918283672469977588472765639545942590682244475022846970016233263523491487274998766208683416623158842416128363801941933423019896438246212995453706060577539057100478958966269667287895410469122659583393259647726094901286622054443599885033215242893920245086220591121140995589,
                          28559384442792876273280274398620578979733786817784174960112400169719065906301471912340204391164075730987771255281479191858503912379974443363319206013285922932969143082114108995903507302607372164107846395526169928849546930352778612946811335349917424469188917500996253619438384218721744278787164274625243781917237444202229339672234113350935948264576180342492691117960376023738627349150441152487120197333042448834154779966801277094070528166918968412433078879939664053044797116916260095055641583506170045241549105022323819314163625798834513544420165235412105694681616578431019525684868803389424296613694298865514217451303,
                          ])
print(result)

